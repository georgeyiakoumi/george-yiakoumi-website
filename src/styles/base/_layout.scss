@use "./breakpoints" as breakpoint;
@use "./transitions" as transition;
@use "./scale" as scale;
@use "./spacing" as spacing;

#root {

  #smooth-wrapper {
    display: grid;
    grid-template-columns: [sidebar] 5fr [main] 11fr [main-end];
    grid-gap: var(--gap);

    @include breakpoint.respond(tablet) {
      grid-template-columns: [sidebar] 1fr [main] 5fr [main-end];
    }

    @include breakpoint.respond(mobile) {
      display: flex;
      flex-direction: column;
    }
   
    aside {
      grid-column: span sidebar;
      position: sticky;
      height: 100svh;
      top: 0;
      z-index: 10;

      @include breakpoint.respond(mobile) {
        position: absolute;
      }
    }

    #smooth-content {
      grid-column: main / main-end;

      @include breakpoint.respond(mobile) {
          grid-column: 1 / -1;
        }

      main {
        display: grid;
        grid-template-columns: repeat(11, 1fr);
        height: 100%;

        @include breakpoint.respond(tablet) {
          grid-template-columns: 1fr;
        }

        > section {
          grid-column-start: 2;
          display: flex;
          flex-direction: column;
          padding: var(--container-padding) 0;
          align-items: start;

          @include breakpoint.respond(tablet) {
            grid-column-start: 1;

            padding-right: var(--gap);
          }

          @include breakpoint.respond(mobile) {

            padding-top: scale.$scale-xl-7 !important;
            padding-right: 0;
            gap: 0;
          }

          & > header {
            display: flex;
            flex-direction: column;
            gap: scale.$scale-lg;
            align-self: stretch;

            @include breakpoint.respond(mobile) {
              padding: var(--gap);
            }

          }
        }
      }
    } 
  }
}