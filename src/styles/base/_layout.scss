@use "./breakpoints" as breakpoint;
@use "./transitions" as transition;
@use "./scale" as scale;
@use "./spacing" as spacing;

body {
  background-color: var(--colour-background-base);
  color: var(--colour-text-weak);
  transition: transition.$time;    
}

#root {
  display: grid;
  grid-template-columns: [sidebar] 5fr [main] 11fr [main-end];
  gap: var(--gap);
  height: 100vh;

  @include breakpoint.respond(tablet) {
    grid-template-columns: [sidebar] 2fr [main] 6fr [main-end];
  }

  @include breakpoint.respond(mobile) {
    grid-template-columns: repeat(4, 1fr);
  }

}

main {
  grid-column: main / main-end;
  display: grid;
  grid-template-columns: repeat(11, 1fr);
  grid-template-rows: 1fr; 
  gap: var(--gap);
  height: auto;
  align-content: start; 

  @include breakpoint.respond(tablet) {
    grid-template-columns: repeat(6, 1fr);
    height: auto;
  }

  @include breakpoint.respond(mobile) {
    grid-column: 1 / -1;
    grid-template-columns: repeat(4, 1fr);
    height: auto;
    padding: scale.$scale-xl-7 0 0 0;
  }

  .lenis {
    grid-column: 1 / span 11;
    height: 100vh;
    overflow: auto;
    will-change: transform;
    
  
    @include breakpoint.respond(tablet) {
      grid-column: 1 / span 6;
    }
  
    @include breakpoint.respond(mobile) {
      grid-column: 1 / span 4;
      margin-left: 0;
    }
  
    & > div {
      display: grid;
      grid-template-columns: repeat(11, 1fr);
      gap: var(--gap);
  
      @include breakpoint.respond(tablet) {
        grid-template-columns: repeat(6, 1fr);
        margin-left: 0;
      }
  
      @include breakpoint.respond(mobile) {
        grid-template-columns: repeat(4, 1fr);
      }
      
  
      & > section {
        padding: var(--container-padding) 0;
  
        @include breakpoint.respond(tablet) {
          grid-column: 1 / span 6;
          padding-right: var(--gap);
        }
  
        @include breakpoint.respond(mobile) {
          grid-column: 1 / -1;
          padding-right: 0;
        }
      }
  
    }
  
  }

  & > section {
    display: grid;
    grid-column-start: 2;
    align-content: start;
    gap: var(--gap);
    padding: var(--container-padding) 0;

    @include breakpoint.respond(tablet) {
      grid-column-start: 1;
      padding-top: var(--gap);
    }

    @include breakpoint.respond(mobile) {
      grid-column: 1 / -1;
      padding-top: var(--gap);
    }

    & > * {
      grid-column: 1 / -1;
      place-self: start;
    }

    h1 {
      @include breakpoint.respond(mobile) {
          justify-self: center;
      }
    }

  }

}